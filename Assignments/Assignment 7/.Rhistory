rm(list=ls()) # Clear the Environment / History
set.seed(135343466) # <- fix the seed so the results are reproducible!
library(TSA)
data(airmils)
plot(robot, type='l', ylab="final position")
data(airmiles)
plot(airmiles, type='l', ylab="final position")
plot(airmiles, type='l', ylab="air miles")
acf(airmiles, ylab=expression(r[k]))
acf(airmiles, ylab=expression(r[k]))
pacf(airmiles, ylab=expression(r[k]))
eacf(airmiles)
acf(airmiles, ylab=expression(r[k]))
pacf(airmiles, ylab=expression(r[k]))
eacf(airmiles)
plot(airmiles, type='l', ylab="air miles")
# (b) Plot the first difference of the time series. What improvements do you see here?
#   Is there still something in this data that needs to be accounted for?
diff.log(airmiles)
# (b) Plot the first difference of the time series. What improvements do you see here?
#   Is there still something in this data that needs to be accounted for?
plot(diff(log(airmiles)))
plot(diff(airmiles))
# (b) Plot the first difference of the time series. What improvements do you see here?
#   Is there still something in this data that needs to be accounted for?
plot(diff(log(airmiles)))
plot(diff(airmiles))
# (b) Plot the first difference of the time series. What improvements do you see here?
#   Is there still something in this data that needs to be accounted for?
plot(diff(airmiles))
# (c) Create the sample ACF plot, sample PACF plot and sample EACF table for the
# first difference of the time series. Explain any conclusions you can make from
# each of these visualizations. If you find that it is difficult to make a single overall
# conclusion about the underlying model, explain why it is difficult.
acf(diff(airmiles), ylab=expression(r[k]))
pacf(diff(airmiles), ylab=expression(r[k]))
eacf(diff(airmiles))
eacf(diff(airmiles))
rm(list=ls()) # Clear the Environment / History
set.seed(135343466) # <- fix the seed so the results are reproducible!
library(TSA)
# (a) Load in and plot the time series dataset. Does this data appear to come from a
# stationary process? Why or why not?
data(airmiles)
plot(airmiles, type='l', ylab="air miles")
# (b) Plot the first difference of the time series. What improvements do you see here?
#   Is there still something in this data that needs to be accounted for?
plot(diff(airmiles))
# (c) Create the sample ACF plot, sample PACF plot and sample EACF table for the
# first difference of the time series. Explain any conclusions you can make from
# each of these visualizations. If you find that it is difficult to make a single overall
# conclusion about the underlying model, explain why it is difficult.
acf(diff(airmiles), ylab=expression(r[k]))
pacf(diff(airmiles), ylab=expression(r[k]))
eacf(diff(airmiles))
phi.vec = c(rep(0, times=11), 0.9)
theta.vec = c(rep(0, times=11), 0.4)
my.data = arima.sim(model = list(ar = phi.vec, ma = theta.vec), n = 200)
rm(list=ls()) # Clear the Environment / History
set.seed(135343466) # <- fix the seed so the results are reproducible!
library(TSA)
# (a) Load in and plot the time series dataset. Does this data appear to come from a
# stationary process? Why or why not?
data(airmiles)
plot(airmiles, type='l', ylab="air miles")
# (b) Plot the first difference of the time series. What improvements do you see here?
#   Is there still something in this data that needs to be accounted for?
plot(diff(airmiles))
# (c) Create the sample ACF plot, sample PACF plot and sample EACF table for the
# first difference of the time series. Explain any conclusions you can make from
# each of these visualizations. If you find that it is difficult to make a single overall
# conclusion about the underlying model, explain why it is difficult.
acf(diff(airmiles), ylab=expression(r[k]))
pacf(diff(airmiles), ylab=expression(r[k]))
eacf(diff(airmiles))
phi.vec = c(rep(0, times=11), 0.9)
theta.vec = c(rep(0, times=11), 0.4)
my.data = arima.sim(model = list(ar = phi.vec, ma = theta.vec), n = 200)
#Select and evaluate the best subset ARMA models:
armasubsets.select = armasubsets(y=my.data, nar = 14, nma = 14, y.name = 'y')
#Plot the subset ARMA selection
plot(armasubsets.select)
phi.vec = c(rep(0, times=11), 0.5)
theta.vec = c(rep(0, times=11), 0.5)
my.data = arima.sim(model = list(ar = phi.vec, ma = theta.vec), n = 200)
#Select and evaluate the best subset ARMA models:
armasubsets.select = armasubsets(y=my.data, nar = 14, nma = 14, y.name = 'y')
#Plot the subset ARMA selection
plot(armasubsets.select)
dim(airmiles)
airmiles
phi.vec = c(rep(0, times=11), 0.5)
theta.vec = c(rep(0, times=11), 0.5)
my.data = arima.sim(model = list(ar = phi.vec, ma = theta.vec), n = 113)
#Select and evaluate the best subset ARMA models:
armasubsets.select = armasubsets(y=my.data, nar = 14, nma = 14, y.name = 'y')
#Plot the subset ARMA selection
plot(armasubsets.select)
#Select and evaluate the best subset ARMA models:
armasubsets.select = armasubsets(y=diff(airmiles), nar = 14, nma = 14, y.name = 'y')
#Plot the subset ARMA selection
plot(armasubsets.select)
#Plot the subset ARMA selection
plot(armasubsets.select)
